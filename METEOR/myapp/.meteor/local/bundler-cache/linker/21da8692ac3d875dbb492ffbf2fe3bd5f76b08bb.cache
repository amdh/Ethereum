[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar _ = Package.underscore._;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar TemplateVar;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// packages/frozeman_template-var/TemplateVar.js                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n/**                                                                                                           // 1\nTemplate helpers                                                                                              // 2\n                                                                                                              // 3\n@module package frozeman:template-var                                                                         // 4\n**/                                                                                                           // 5\n                                                                                                              // 6\n                                                                                                              // 7\n/**                                                                                                           // 8\nThe `TemplateVar` provides reactive variables for template instances.                                         // 9\n                                                                                                              // 10\nNote! The reactive variables, are not preserved over hot code reloads, like the Meteor `Session` object does.\n                                                                                                              // 12\n                                                                                                              // 13\nTo set and get properties inside template helpers, hooks and events do as follow:                             // 14\n                                                                                                              // 15\n    // set a property                                                                                         // 16\n    TemplateVar.set('myProperty', 'myValue');                                                                 // 17\n                                                                                                              // 18\n    // to get it inside a helper, or callback                                                                 // 19\n    TemplateVar.get('myProperty');                                                                            // 20\n                                                                                                              // 21\n                                                                                                              // 22\n@class TemplateVar                                                                                            // 23\n@constructor                                                                                                  // 24\n**/                                                                                                           // 25\nTemplateVar = {                                                                                               // 26\n                                                                                                              // 27\n    /**                                                                                                       // 28\n    Gets the current template instance and returns also the correct keys and values.                          // 29\n                                                                                                              // 30\n    @method _getTemplateInstance                                                                              // 31\n    @param {Object} givenTemplate            the current template                                             // 32\n    @param {String} key                 the given key                                                         // 33\n    @param {Mixed} value                the value to set                                                      // 34\n    @return {String} The generated key name.                                                                  // 35\n    **/                                                                                                       // 36\n    _getTemplateInstance: function(givenTemplate, key, value){                                                // 37\n        var template = null;                                                                                  // 38\n                                                                                                              // 39\n        // try if a template instance was given                                                               // 40\n        if(_.isObject(givenTemplate) && (givenTemplate.hasOwnProperty('_templateInstance') || givenTemplate.hasOwnProperty('view'))) {\n                                                                                                              // 42\n            // if it couldn't get the template, check if a template instance was given.                       // 43\n            if(givenTemplate.hasOwnProperty('_templateInstance'))                                             // 44\n                template = givenTemplate;                                                                     // 45\n            else if(givenTemplate.hasOwnProperty('view'))                                                     // 46\n                template = givenTemplate.view;                                                                // 47\n                                                                                                              // 48\n        // otherwise try to get one yourself                                                                  // 49\n        } else {                                                                                              // 50\n            try {                                                                                             // 51\n                                                                                                              // 52\n                template = Template.instance().view;                                                          // 53\n                value = key;                                                                                  // 54\n                key = givenTemplate;                                                                          // 55\n                                                                                                              // 56\n            } catch(e) {                                                                                      // 57\n                throw new Meteor.Error('TemplateVar: works only from withing template helpers, callbacks or events. Additonally you can pass a template instance as the first parameter.');\n            }                                                                                                 // 59\n        }                                                                                                     // 60\n                                                                                                              // 61\n                                                                                                              // 62\n                                                                                                              // 63\n                                                                                                              // 64\n        // move on view up if its a #with, #if or #unless                                                     // 65\n        while(template.name.indexOf('Template.') === -1 && template.parentView) {                             // 66\n            template = template.parentView;                                                                   // 67\n        }                                                                                                     // 68\n                                                                                                              // 69\n        // make sure the template session object exists                                                       // 70\n        if(template && !template._templateVar)                                                                // 71\n            template._templateVar = {};                                                                       // 72\n                                                                                                              // 73\n        // create Reactive var, if not existing                                                               // 74\n        if(template && !template._templateVar[key])                                                           // 75\n            template._templateVar[key] = new ReactiveVar(value);                                              // 76\n                                                                                                              // 77\n                                                                                                              // 78\n        // build the keyname                                                                                  // 79\n        return {                                                                                              // 80\n            key: key,                                                                                         // 81\n            value: value,                                                                                     // 82\n            template: template                                                                                // 83\n        };                                                                                                    // 84\n    },                                                                                                        // 85\n                                                                                                              // 86\n    /**                                                                                                       // 87\n    Gets the template instance form an DOM selector of an element within.                                     // 88\n                                                                                                              // 89\n    @method _getTemplateInstance                                                                              // 90\n    @param {String} selector            an element withing the template to get                                // 91\n    @return {Object} The template instace                                                                     // 92\n    **/                                                                                                       // 93\n    _getTemplateInstanceBySelector: function(selector){                                                       // 94\n                                                                                                              // 95\n        var view;                                                                                             // 96\n                                                                                                              // 97\n        try {                                                                                                 // 98\n            view = Blaze.getView($(selector)[0]);                                                             // 99\n        } catch(e) {                                                                                          // 100\n                                                                                                              // 101\n        }                                                                                                     // 102\n                                                                                                              // 103\n        // set interval until elemtn appears and re-call funciton????                                         // 104\n        if(selector && view) {                                                                                // 105\n                                                                                                              // 106\n            // move on view up if its a #with, #if or #unless                                                 // 107\n            while(view.name.indexOf('Template.') === -1 && view.parentView) {                                 // 108\n                view = view.parentView;                                                                       // 109\n            }                                                                                                 // 110\n                                                                                                              // 111\n            if(!view || !view.templateInstance)                                                               // 112\n                return;                                                                                       // 113\n                                                                                                              // 114\n            // view is not yet rendered, wait for it and recall this function                                 // 115\n            if(!view.isRendered) {                                                                            // 116\n                var wait = new ReactiveVar(false);                                                            // 117\n                                                                                                              // 118\n                view.onViewReady(function(){                                                                  // 119\n                    if(wait)                                                                                  // 120\n                        wait.set(true);                                                                       // 121\n                    wait = null;                                                                              // 122\n                });                                                                                           // 123\n                                                                                                              // 124\n                return wait;                                                                                  // 125\n            }                                                                                                 // 126\n                                                                                                              // 127\n            return view.templateInstance();                                                                   // 128\n                                                                                                              // 129\n        } else {                                                                                              // 130\n            console.warn('TemplateVar: Couldn\\'t find an element within a template matching the selector \"'+ selector +'\"');\n            return null;                                                                                      // 132\n        }                                                                                                     // 133\n    },                                                                                                        // 134\n                                                                                                              // 135\n                                                                                                              // 136\n    // PUBLIC                                                                                                 // 137\n                                                                                                              // 138\n    /**                                                                                                       // 139\n    When get is called we use the ReactiveVar.get from the template instance.                                 // 140\n                                                                                                              // 141\n    @method get                                                                                               // 142\n    @param {Object} template            the current template                                                  // 143\n    @param {String} propertyName     The name of the property you want to get. Should consist of the `'myPropertyName'`\n    @return {Mixed} The stored value.                                                                         // 145\n    **/                                                                                                       // 146\n    get: function (template, propertyName) {                                                                  // 147\n        var values = TemplateVar._getTemplateInstance(template, propertyName);                                // 148\n                                                                                                              // 149\n        return values.template._templateVar[values.key].get();                                                // 150\n    },                                                                                                        // 151\n                                                                                                              // 152\n                                                                                                              // 153\n    /**                                                                                                       // 154\n    When set is called every depending reactive function where `TemplateVar.get()` with the same key is called will rerun.\n                                                                                                              // 156\n    @method set                                                                                               // 157\n    @param {Object} template            the current template                                                  // 158\n    @param {String} propertyName     The name of the property you want to get. Should consist of the `'templateName->myPropertyName'`\n    @param {String|Object} value     If the value is a string with `rerun`, then it will be rerun all dependent functions where get `TemplateInstance.get()` was called.\n    @return undefined                                                                                         // 161\n    **/                                                                                                       // 162\n    set: function (template, propertyName, value) {                                                           // 163\n        var values = TemplateVar._getTemplateInstance(template, propertyName, value);                         // 164\n                                                                                                              // 165\n        values.template._templateVar[values.key].set(values.value);                                           // 166\n    },                                                                                                        // 167\n                                                                                                              // 168\n                                                                                                              // 169\n    /**                                                                                                       // 170\n    When get is called we use the ReactiveVar.get from the template instance.                                 // 171\n                                                                                                              // 172\n    @method get                                                                                               // 173\n    @param {Object} selector         a selector of an element within another template                         // 174\n    @param {String} propertyName     The name of the property you want to get. Should consist of the `'myPropertyName'`\n    @return {Mixed} The stored value.                                                                         // 176\n    **/                                                                                                       // 177\n    getFrom: function (selector, propertyName) {                                                              // 178\n        var template = TemplateVar._getTemplateInstanceBySelector(selector);                                  // 179\n        if(!template)                                                                                         // 180\n            return;                                                                                           // 181\n                                                                                                              // 182\n        if(template instanceof ReactiveVar) {                                                                 // 183\n            // make reactive                                                                                  // 184\n            template.get();                                                                                   // 185\n            return;                                                                                           // 186\n        }                                                                                                     // 187\n                                                                                                              // 188\n        if(template.view._templateVar && template.view._templateVar[propertyName])                            // 189\n            return template.view._templateVar[propertyName].get();                                            // 190\n    },                                                                                                        // 191\n                                                                                                              // 192\n                                                                                                              // 193\n    /**                                                                                                       // 194\n    When set is called every depending reactive function where `TemplateVar.get()` with the same key is called will rerun.\n                                                                                                              // 196\n    @method set                                                                                               // 197\n    @param {Object} selector         a selector of an element within another template                         // 198\n    @param {String} propertyName     The name of the property you want to get. Should consist of the `'templateName->myPropertyName'`\n    @param {String|Object} value     If the value is a string with `rerun`, then it will be rerun all dependent functions where get `TemplateInstance.get()` was called.\n    @return undefined                                                                                         // 201\n    **/                                                                                                       // 202\n    setTo: function (selector, propertyName, value) {                                                         // 203\n        var template = TemplateVar._getTemplateInstanceBySelector(selector);                                  // 204\n        if(!template)                                                                                         // 205\n            return;                                                                                           // 206\n                                                                                                              // 207\n        if(template.view._templateVar && template.view._templateVar[propertyName])                            // 208\n            template.view._templateVar[propertyName].set(value);                                              // 209\n    }                                                                                                         // 210\n};                                                                                                            // 211\n                                                                                                              // 212\n// Register Global helpers                                                                                    // 213\n/**                                                                                                           // 214\nGlobal TemplateVar helper                                                                                     // 215\n                                                                                                              // 216\n@method (TemplateVar)                                                                                         // 217\n**/                                                                                                           // 218\nTemplate.registerHelper('TemplateVar', function(name){                                                        // 219\n    return {                                                                                                  // 220\n        get: TemplateVar.get.bind(this, Template.instance()),                                                 // 221\n        set: TemplateVar.set.bind(this, Template.instance()),                                                 // 222\n        getFrom: TemplateVar.getFrom.bind(this),                                                              // 223\n        setTo: TemplateVar.setTo.bind(this)                                                                   // 224\n    };                                                                                                        // 225\n});                                                                                                           // 226\n                                                                                                              // 227\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['frozeman:template-var'] = {}, {\n  TemplateVar: TemplateVar\n});\n\n})();\n","servePath":"/packages/frozeman_template-var.js"}]